<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.udtopia</groupId>
	<artifactId>udtopia</artifactId>
	<version>alpha-SNAPSHOT</version>

	<name>UDTopia</name>
	<description>
		User-defined types (UDTs) are the best way to control complexity and bring clarity to your code,
		but UDTs are unwieldy in Java.
		UDTopia makes Java UDTs a delight.
	</description>
	<url>http://udtopia.org</url>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://opensource.org/licenses/MIT</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>willhains</id>
			<name>Will Hains</name>
			<email>willhains@udtopia.org</email>
			<roles>
				<role>owner</role>
				<role>developer</role>
			</roles>
			<timezone>-9</timezone>
			<properties>
				<picUrl>https://gravatar.com/avatar/b17291c4923439acd2b117a327feb218</picUrl>
				<twitter>willhains</twitter>
			</properties>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/willhains/udtopia.git</connection>
		<developerConnection>scm:git:ssh://github.com:willhains/udtopia.git</developerConnection>
		<url>https://github.com/willhains/udtopia/tree/alpha</url>
	</scm>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<plugins>

			<!-- Generate Javadoc JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<excludePackageNames>javax.*</excludePackageNames>
					<doclint>all</doclint>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadoc</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<failOnError>true</failOnError>
							<failOnWarnings>true</failOnWarnings>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Generate Sources JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Measure Code Coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<configuration>
					<excludes>
						<exclude>org/udtopia/assertion/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>test-coverage</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>CLASS</element>
									<limits>
										<limit>
											<counter>BRANCH</counter>
											<value>MISSEDCOUNT</value>
											<maximum>0</maximum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Mutation Testing -->
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.6.7</version>
				<executions>
					<execution>
						<id>mutation-coverage</id>
						<goals>
							<goal>mutationCoverage</goal>
						</goals>
						<configuration>
							<threads>4</threads>
							<mutators>STRONGER</mutators>
							<mutationThreshold>100</mutationThreshold>
							<coverageThreshold>100</coverageThreshold>
							<timestampedReports>false</timestampedReports>
							<jvmArgs>-ea</jvmArgs>
							<outputFormats>
								<outputFormat>HTML</outputFormat>
								<outputFormat>XML</outputFormat>
							</outputFormats>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Update Project Version from CLI -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.8.1</version>
			</plugin>

			<!-- Code Signing -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>install</phase>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
							<gpgArguments>
								<arg>--pinentry-mode</arg>
								<arg>loopback</arg>
							</gpgArguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Deploy to Maven Central -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.8</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<dependencies>

		<!-- JUnit for unit tests -->
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>

		<!-- Hamcrest for assertions in unit tests -->
		<!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>

		<!-- Mockito for mock objects in unit tests -->
		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
		</dependency>

		<!-- JMH for benchmark tests -->
		<!-- https://mvnrepository.com/artifact/org.openjdk.jmh/jmh-core -->
		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-core</artifactId>
			<version>1.34</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjdk.jmh/jmh-generator-annprocess -->
		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-generator-annprocess</artifactId>
			<version>1.34</version>
			<scope>test</scope>
		</dependency>

		<!-- JSR305 annotations for code safety -->
		<!-- https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305 -->
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.2</version>
			<scope>
				<!-- Source retention only -->
				provided
			</scope>
		</dependency>

	</dependencies>
</project>
