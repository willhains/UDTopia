# Build a release version, and deploy to Central.
name: Version Release

on:
  release:
    types: [ published ] # Don't publish draft releases

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Release Version on Java 8 (Zulu)

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: zulu
          cache: maven
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      # Derive the version number to set in pom.xml from the release name
      - name: Derive Beta Version Number
        run: echo "DERIVED_VERSION=${{ github.event.release.name }}" >> $GITHUB_ENV

      # Update the project version in pom.xml
      - name: Update Version
        run: mvn -B versions:set -DnewVersion=${{ env.DERIVED_VERSION }}

      - name: Build & Publish to Apache Maven Central
        run: mvn -B deploy
        env:
          MAVEN_USERNAME: willhains
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      # Upload the built .jar files to project releases page on GitHub
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ github.workspace }}/target/*.jar
